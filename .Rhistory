is.na(msleep)
any_na(msleep)
msleep %>%
summarize(number_nas = sum(is.na(msleep)))
msleep %>%
summarize(number_nas = sum(is.na(conservation)))
msleep %>%
summarise_all(~(sum(is.na(.))))
msleep %>%
purrr::map_df(~ sum(is.na(.))) #map to a new data frame the sum results of the is.na function for all columns
msleep %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
msleep %>%
count(conservation)
msleep %>%
count(conservation, sort = TRUE)
amniota <- readr::read_csv("data/amniota.csv")
summary(amniota)
amniota %>%
summarise_all(~(sum(is.na(.))))
hist(amniota$egg_mass_g)
amniota_tidy <- amniota %>%
na_if("-999")
amniota_tidy %>%
summarise_all(~(sum(is.na(.))))
amniota_tidy %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
names(msleep)
msleep %>%
count(conservation, sort=T)
msleep %>%
mutate(conservation_modified = na_if(conservation, "domesticated"))%>%
count(conservation_modified, sort = T) #previously there were only 29 NA's
life_history <- readr::read_csv("data/mammal_lifehistories_v2.csv")
life_history %>%
skimr::skim()
life_history_tidy <- life_history %>%
na_if("-999")
life_history_tidy %>%
skimr::skim()
life_history_tidy %>%
summarize(number_nas=sum(is.na(life_history_tidy)))
life_history_tidy %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
library("tidyverse")
library("janitor")
library("skimr")
life_history <- readr::read_csv("data/mammal_lifehistories_v3.csv")
life_history <- janitor::clean_names(life_history)
anyNA(life_history)
purrr::map_df(~(sum(is.na(.))))
purrr::map_df(~(sum(is.na(.)))
life_history%>%
purrr::map_df(~(sum(is.na(.)))
life_history%>%
purrr::map_df(~(sum(is.na(.))))
anyNA(life_history)
skim(life_history)
life_history%>%
na_if("-999")
life_history%>%
na_if("-999")
skim(life_history)
Life_history_tidy<-life_history%>%
na_if("-999")
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
anyNA(life_history)
skim(life_history)
head(life_history)
Life_history_tidy<-life_history%>%
na_if("-999","0","not measured")
Life_history_tidy<-life_history%>%
na_if("-999"|"0"|"not measured")
Life_history_tidy<-life_history%>%
na_if("-999")
skim(Life_history_tidy)
Life_history_tidy<-life_history%>%
na_if("-999")%>%
na_if("0")%>%
mutate(newborn=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
Life_history_tidy<-life_history%>%
na_if("-999")%>%
na_if("0")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
naniar::miss_var_summary(life_history_tidy)
Life_history_tidy<-life_history%>%
na_if("-999")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
msleep %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
life_history_tidy %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
naniar::miss_var_summary(life_history_tidy)
Life_history_tidy<-life_history%>%
na_if("-999")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
hist(life_history_tidy$max_life)
hist(life_history_tidy$max_life)
hist(life_history_tidy$max_life)
hist(life_history_tidy$max_life)
hist(life_history_tidy$max_life)
library("tidyverse")
library("janitor")
library("skimr")
life_history <- readr::read_csv("data/mammal_lifehistories_v3.csv")
life_history <- janitor::clean_names(life_history)
anyNA(life_history)
skim(life_history)
head(life_history)
Life_history_tidy<-life_history%>%
na_if("-999")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
naniar::miss_var_summary(life_history_tidy)
naniar::miss_var_summary(life_history_tidy)
Life_history_tidy<-life_history%>%
na_if("-999")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
life_history_tidy<-life_history%>%
na_if("-999")%>%
mutate(newborn_new=na_if(newborn,("not measured")))
skim(Life_history_tidy)
life_history_tidy%>%
purrr::map_df(~(sum(is.na(.))))
life_history_tidy %>%
purrr::map_df(~ sum(is.na(.))) %>%
pivot_longer(everything(),
names_to= "variables",
values_to = "num_nas") %>%
arrange(desc(num_nas))
naniar::miss_var_summary(life_history_tidy)
hist(life_history_tidy$max_life)
life_history_tidy <-
life_history_tidy %>%
mutate(max_life=na_if(max_life, 0))
naniar::miss_var_summary(life_history_tidy)
life_history_tidy %>%
group_by(order) %>%
select(order, wean_mass) %>%
naniar::miss_var_summary(order=T)
life_history %>%
naniar::replace_with_na(replace = list(newborn = "not measured", weaning= -999, wean_mass= -999, afr= -999, max_life= 0, litter_size= -999, gestation= -999, mass= -999)) %>%
naniar::miss_var_summary()
readr::read_csv(data/cites.csv)
readr::read_csv(data/"cites.csv")
readr::read_csv("cites.csv")
readr::read_csv(data/"cites.csv")
readr::read_csv("data/cites.csv")
cites<-readr::read_csv("data/cites.csv")
summary(cites)
janitor::(cites)
cites<-janitor::clean_names(cites)
summary(cites)
cites%>%
purrr::map_df(~sum(is.na(.)))
cites%>%
naniar::miss_var_summary()
cites%>%
group_by(class)%>%
select(class,exporter_reported_quantity)%>%
naniar::miss_var_summary()
cites%>%
group_by(class)%>%
select(class,exporter_reported_quantity)%>%
naniar::miss_var_summary()%>%
arrange(desc(pct_miss))
library(visdat)
vis_dat(life_history_tidy) #classes of data
vis_miss(life_history_tidy)
life_history_advance <-
readr::read_csv(file = "data/mammal_lifehistories_v3.csv",
na = c("NA", " ", ".", "-999")) #all NA, blank spaces, .,and -999 are treated as NA
naniar::miss_var_summary(life_history_advance)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(skimr)
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "fastmap", "forcats", "hms", "htmltools", "httpuv", "knitr", "Rcpp", "repr", "reprex", "rlang", "shiny", "tibble", "tinytex", "withr", "xfun"))
amniota<-readr::read_csv(file=data/"amniota.csv")
amniota<-readr::read_csv(data/"amniota.csv")
amniota<-readr::read_csv("data/amniota.csv")
amniota<-janitor::clean_names(amniota)
amphibio<-readr::read_csv("data/amphibio.csv")
amphibio<-janitor::clean_names(amphibio)
summary(amniota)
amniota%>%
naniar::miss_var_summary()
amniota_tidy<-amniota%>%
na_if("-999")
amniota_tidy%>%
naniar::miss_var_summary()
glimpse(amphibio)
glimpse(amphibio)
head(amphibio)
amphibio%>%
naniar::miss_var_summary()
amphibio%>%
summarise(number_nas=sum(is.na(amphibio)))
amniota_tidy%>%
summarise(number_nas=sum(is.na(amniota_tidy)))
amniota%>%
summarise(number_nas=sum(is.na(amniota)))
amniota_tidy<-amniota%>%
na_if("-999")
head(amniota_tidy)
head(amniota_tidy)
summary(amniota_tidy)
amniota_tidy%>%
naniar::miss_var_summary()
glimpse(amphibio)
head(amphibio)
names(amphibio)
amphibio%>%
naniar::miss_var_summary()
amniota_tidy%>%
group_by(class)%>%
select(class,egg_mass_g)%>%
naniar::miss_var_summary()%>%
arrange(pct_miss)
names(amniota_tidy)
amniota_tidy%>%
filter(common_name=="platypus")
amniota_tidy%>%
filter(species=="anatinus")
amphibio%>%
select("fos","ter","aqu","arb")%>%
naniar::miss_var_summary()
amniota_advance<-readr::read_csv(file="data/amniota",na=c("na","-999"))
amniota_advance<-readr::read_csv(file="data/amniota.csv",na=c("na","-999"))
amniota_advance%>%
naniar::miss_var_summary()
amniota_tidy%>%
naniar::miss_var_summary()
amniota%>%
naniar::miss_var_summary()
amniota_tidy<-amniota%>%
na_if("-999")
amniota_tidy%>%
naniar::miss_var_summary()
summary(amniota)
anyNA(amniota)
amniota_advance<-readr::read_csv(file="data/amniota.csv",na=c("-999"))
amniota_advance%>%
naniar::miss_var_summary()
install.packages(c("backports", "dplyr", "htmltools", "Rcpp", "rlang", "tibble", "xfun"))
install.packages(c("tidyverse", "naniar", "shiny", "dataMaid", "janitor", "here"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(naniar)
library(janitor)
library(shiny)
library(paletteer)
turtles<-read.csv(here("Final Project","Turtle_data.csv"))
#turtles
#view(turtles)
turtles%>%
naniar::miss_var_summary()
turtles%>%
tabyl(Species)
turtles%>%
group_by(Species)%>%
summarise(across(contains("CL"),mean,na.rm=T))
turtles%>%
group_by(year)%>%
count(Dead_Alive)
turtles%>%
group_by(year)%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")
turtles%>%
filter(Dead_Alive=="")
turtles_tidy<-turtles%>%
mutate_all(tolower)
turtles_tidy%>%
group_by(year)%>%
filter(Dead_Alive!="")%>%
ggplot(aes(x=year,fill=Dead_Alive))+
geom_bar(position = "dodge")+
labs(title = "Number of Dead and Live Captures per Year",x="year",y="Number of Dead or Live Captures")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles%>%
group_by(Species)%>%
summarise(mean_SCL_tip=mean(SCL_tip,na.rm=T))
turtles%>%
filter(Gear!="")%>%
tabyl(Gear,Species)
turtles%>%
filter(Gear!=""&Species!="")%>%
ggplot(aes(x=Gear,fill=Species))+
geom_bar(position = "dodge")+
labs(title = "Gear used for Different Spcies",x="Gear",y="Number Captured with Given Method")+
theme(axis.text.x = element_text(angle = 60,hjust = 1))
turtles_tidy2<-turtles%>%
na_if("")%>%
na_if("0")%>%
na_if("0.0")
turtles_tidy2%>%
tabyl(Sex_laparoscopy)
turtles_tidy2%>%
mutate(dead_alive_new=ifelse(Dead_Alive=="Alive","alive",Dead_Alive))
turtles_tidy2%>%
mutate(dead_alive_new=ifelse(Dead_Alive=="Alive","alive",Dead_Alive))
turtles_tidy2%>%
tabyl(Dead_Alive)
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=ifelse(Dead_Alive=="Alive","alive",Dead_Alive))
turtles3%>%
tabyl(Dead_Alive)
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=ifelse(Dead_Alive==Alive,alive,Dead_Alive))
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=ifelse(Dead_Alive=="Alive","alive",Dead_Alive))
turtles3%>%
tabyl(Dead_Alive)
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=if_else(Dead_Alive=="Alive","alive",Dead_Alive))
turtles3%>%
tabyl(Dead_Alive)
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=if_else(Dead_Alive=="Alive","alive",Dead_Alive))
turtles3%>%
tabyl(dead_alive_new)
turtles3<-turtles_tidy2%>%
mutate(dead_alive_new=if_else(Dead_Alive=="alive","Alive",Dead_Alive))
turtles3%>%
tabyl(dead_alive_new)
summary(turtles)
glimpse(turtles)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
getwd()
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <-
lapply(files, read_csv)
class(spider_list)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list[[3]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Shasta
spider_list$Butte
spider_list$Shasta
spider_list$Alameda
spider_list$Yolo
spider_list$Butte
spiders_all <- bind_rows(spider_list)
head(spiders_all)
spiders_all <- bind_rows(spider_list)
head(spiders_all)
view(spiders_all)
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
7
?join
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
spiders_with_locs$Date <-  as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
class(spiders_with_locs$Date)
head(spiders_with_locs$Date)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
head(spiders_with_locs)
head(spiders_locs)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("rgeos")
install.packages("rgdal")
library(ggmap)
library(tidyverse)
library(rgeos)
library(rgdal)
spiders <- read_csv("spiders_with_locs.csv")
spiders %>%
select(Latitude, Longitude) %>%
summary()
lat <- c(34.67, 44.51)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
b <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(b)
ggmap(b) +
geom_point(data = spiders, aes(Longitude, Latitude), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
b <- get_map(bbox, maptype = "toner-lite", source = "stamen")
ggmap(b) +
geom_point(data = spiders, aes(Longitude, Latitude), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude), color = "red", size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude), color = Family, size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude), color = "blue", size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude), color = "blue", size = 2, alpha = 0.7,shape=Family) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude), color = "blue", size = 2, alpha = 0.7,shape=2) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,color=Family), size = 2, alpha = 0.7,shape=2) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,color=Genus), size = 2, alpha = 0.7,shape=2) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
spiders_all <- bind_rows(spider_list)
head(spiders_all)
view(spiders_all)
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,color=County), size = 2, alpha = 0.7,shape=2) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,color=County), size = 2, alpha = 0.7,shape=1) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,fill=County), size = 2, alpha = 0.7,shape=1) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
g <- get_map(bbox, maptype = "toner-2010", source = "stamen")
ggmap(g) +
geom_point(data = spiders, aes(Longitude, Latitude,color=County), size = 2, alpha = 0.7,shape=1) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
install.packages("raster")
install.packages("sp")
library(raster)
library(sp)
install.packages("rgdal")
library(rgdal)
install.packages("sp")
install.packages("rgdal")
c <- shapefile("data/CA_counties/CA_Counties_TIGER2016.shp") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
class(c)
plot(c)
install.packages("maptools")
library("maptools")
head(c@data)
ct <- broom::tidy(c, region = "NAME")
head(ct)
head(c)
class(ct)
ggmap(b) + geom_polygon(data = ct, aes(x = long, y = lat, group = id),
fill = NA, color = "brown", alpha = 0.8, size = 0.2) +
geom_point(data = spiders, aes(Longitude, Latitude), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(b) + geom_polygon(data = ct, aes(x = long, y = lat),
fill = NA, color = "brown", alpha = 0.8, size = 0.2) +
geom_point(data = spiders, aes(Longitude, Latitude), size = 2, alpha = 0.7) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
install.packages(c("backports", "cachem", "dplyr", "mime", "promises", "testthat", "xfun"))
setwd("C:/Users/ericc/Desktop/BIS15W2021_ecoyle")
