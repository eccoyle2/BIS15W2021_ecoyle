selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")+
scale_x_datetime()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")+
scale_x_discrete()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")+
scale_x_discrete(labels=T)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")+
scale_x_discrete(breaks=c(2010,2011,2012,2013,2014,2015,2016,2017,2018,2019))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Ethnicity of UC System Admittees"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit_yearly<-as.character(UC_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "Ethnicity of UC System Admittees"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit_yearly %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$academic_yr<-as.character(UC_admit$academic_yr)
ui <- dashboardPage(
dashboardHeader(title = "Ethnicity of UC System Admittees"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = F),
dashboardBody(selectInput("campus", " Select Campus:",
choices=unique(UC_admit$campus)),
fluidRow(
box(title = "Plot Options", width = 4,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(campus == input$campus) %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Ethnicity of UC System Admittees"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Ethnic Information"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Admittees")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Ethnic Information"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Admission details", choices = c("campus", "academic_yr", "category"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Ethnicity", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = input$x,y="filtered_count_fr",fill="ethnicity"))+
geom_col(position = "dodge")+
scale_fill_brewer(palette = "Set1")+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "UC Admission Information",x=NULL,y="Number of Indivicuals")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
runApp('Lab_13_HW_app_1.R')
runApp('Lab_13_HW_app_2.R')
ui <- dashboardPage(
dashboardHeader(title = "UC Enrollment"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Student/Applicant Details", choices = c("ethnicity", "category", "campus"),
selected = "campus"),
hr(),
helpText("Source: (https://www.universityofcalifornia.edu/infocenter). Admissions data were collected for the years 2010-2019 for each UC campus.")
),
box(title = "Academic Year", width = 6,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
ggplot(aes_string(x = "academic_yr", y="filtered_count_fr",fill = input$x)) +
geom_col(position = "dodge")+
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
